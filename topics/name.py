from topics.fundamental import Инструменты_Методы_Связи_С_Внешним,Поиск_новых_оснований,Исследование_Роли_Понятия_Феномена
from topics.external import *
from fund_hierarch import Отношения_Динамичного_контекста_и_Статичной_Архитектуры, Этическое_Рефлексия_Восприятие, Критика_Понятия_Предложение_Инструмента, Субъект_Объект_Пространство, Коммуникация_с_архитектурой
from topics.hierarch import Места_Сообщества, Влияние_культурных_перемен, Иррациональное, Травма, Медиа_Игра

class Архитектура_как_искусство(Поиск_новых_оснований, Сообщество_культура, Медиа_Дигитальное):
    Ольга_Конюкова = 'name'

    def __init__(self):
        super().__init__()


class Неразрешимость_в_архитектуре(Инструменты_Методы_Связи_С_Внешним, Сообщество_культура, Медиа_Дигитальное):
    Екатерина_Сапунова = 'name'

    def __init__(self):
        super().__init__()


class Методология_преодоления_бинарных_оппозиций(Поиск_новых_оснований, Исследование_Роли_Понятия_Феномена, Система_Картина_мира):
    Евгения_Репина = 'name'

    def __init__(self):
        super().__init__()


class Архитектурный_метод_как_проект (Поиск_новых_оснований, Сообщество_культура):
    Евгения_Репина = 'name'

    def __init__(self):
        super().__init__()


class In_Conversation(Поиск_новых_оснований, Инструменты_Методы_Связи_С_Внешним, Система_Картина_мира, Медиа_Дигитальное, Рефлексия_Переосмысление):
    Соня_Добычина = 'name'

    def __init__(self):
        super().__init__()


class Внешнее_Внутреннее(Инструменты_Методы_Связи_С_Внешним, Сообщество_культура, Память_Время, Среда_Пространство, Рефлексия_Переосмысление):
    Соня_Добычина = 'name'

    def __init__(self):
        super().__init__()


class Парадигма_Платформенности(Поиск_новых_оснований, Инструменты_Методы_Связи_С_Внешним, Медиа_Дигитальное, Система_Картина_мира):
    Никита_Моренов = 'name'

    def __init__(self):
        super().__init__()


class Ориентация_Навигация(Инструменты_Методы_Связи_С_Внешним, Исследование_Роли_Понятия_Феномена, Медиа_Дигитальное, Рефлексия_Переосмысление, Система_Картина_мира):
    Никита_Моренов = 'name'

    def __init__(self):
        super().__init__()


class Архитектура_всякой_фигни(Исследование_Роли_Понятия_Феномена, Медиа_Дигитальное, Сообщество_культура):
    Антон_Карманов = 'name'

    def __init__(self):
        super().__init__()


class Упорядочивание_Обсессивно_компульсивный_синдром(Поиск_новых_оснований, Инструменты_Методы_Связи_С_Внешним, Память_Время, Система_Картина_мира):
    Юрий_Григорян = 'name'

    def __init__(self):
        super().__init__()


class Одержимость_архитектурой (Исследование_Роли_Понятия_Феномена, Система_Картина_мира, Потрясения_Травмы):
    Евгения_Репина = 'name'

    def __init__(self):
        super().__init__()


class Спонтанный_Ордер(Инструменты_Методы_Связи_С_Внешним, Исследование_Роли_Понятия_Феномена, Рефлексия_Переосмысление, Сообщество_культура):
    Евгения_Репина = 'name'

    def __init__(self):
        super().__init__()


class Цель_Целое_Полнота(Инструменты_Методы_Связи_С_Внешним, Исследование_Роли_Понятия_Феномена, Медиа_Дигитальное, Рефлексия_Переосмысление, Система_Картина_мира):
    Сергей_Ситар = 'name'

    def __init__(self):
        super().__init__()


class Подражание_Подобие_Селекция (Поиск_новых_оснований, Инструменты_Методы_Связи_С_Внешним, Сообщество_культура, Система_Картина_мира):
    Сергей_Ситар = 'name'

    def __init__(self):
        super().__init__()


class Условия_возможности_архитектуры (Инструменты_Методы_Связи_С_Внешним, Система_Картина_мира, Сообщество_культура, Медиа_Дигитальное):
    Сергей_Ситар = 'name'

    def __init__(self):
        super().__init__()


class Опасное_безопасное(Исследование_Роли_Понятия_Феномена,  Память_Время, Сообщество_культура, Потрясения_Травмы):
    Марат_Невлютов = 'name'

    def __init__(self):
        super().__init__()


class Новая_универсальность (Инструменты_Методы_Связи_С_Внешним, Медиа_Дигитальное, Рефлексия_Переосмысление, Сообщество_культура):
    Николай_Смирнов = 'name'

    def __init__(self):
        super().__init__()


class Архитектура_как_язык_описания (Инструменты_Методы_Связи_С_Внешним, Медиа_Дигитальное, Сообщество_культура, Память_Время, Среда_Пространство):
    Влад_Капустин = 'name'

    def __init__(self):
        super().__init__()


class Новые_Онтологии(Поиск_новых_оснований):
    Влад_Капустин = 'name'

    def __init__(self):
        super().__init__()






