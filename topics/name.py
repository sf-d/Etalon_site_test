from topics.fundamental import *
from topics.external import *
from fund_hierarch import *

class Архитектура_как_искусство(Поиск_новых_оснований, Сообщество_культура, Медиа_Дигитальное):
    Ольга_Конюкова = 'name'

    def __init__(self):
        super().__init__()


class Неразрешимость_в_архитектуре(Инструменты_Методы_Связи_С_Внешним, Сообщество_культура, Медиа_Дигитальное):
    Екатерина_Сапунова = 'name'

    def __init__(self):
        super().__init__()


class Методология_преодоления_бинарных_оппозиций(Поиск_новых_оснований, Исследование_Роли_Понятия_Феномена, Система_Картина_мира):
    Евгения_Репина = 'name'

    def __init__(self):
        super().__init__()


class Архитектурный_метод_как_проект (Поиск_новых_оснований, Сообщество_культура):
    Евгения_Репина = 'name'

    def __init__(self):
        super().__init__()


class In_Conversation(Поиск_новых_оснований, Инструменты_Методы_Связи_С_Внешним, Система_Картина_мира, Медиа_Дигитальное, Рефлексия_Переосмысление):
    Соня_Добычина = 'name'

    def __init__(self):
        super().__init__()


class Внешнее_Внутреннее(Инструменты_Методы_Связи_С_Внешним, Сообщество_культура, Память_Время, Среда_Пространство, Рефлексия_Переосмысление):
    Соня_Добычина = 'name'

    def __init__(self):
        super().__init__()


class Парадигма_Платформенности(Поиск_новых_оснований, Инструменты_Методы_Связи_С_Внешним, Медиа_Дигитальное, Система_Картина_мира):
    Никита_Моренов = 'name'

    def __init__(self):
        super().__init__()


class Ориентация_Навигация(Инструменты_Методы_Связи_С_Внешним, Исследование_Роли_Понятия_Феномена, Медиа_Дигитальное, Рефлексия_Переосмысление, Система_Картина_мира):
    Никита_Моренов = 'name'

    def __init__(self):
        super().__init__()


class Архитектура_всякой_фигни(Исследование_Роли_Понятия_Феномена, Медиа_Дигитальное, Сообщество_культура):
    Антон_Карманов = 'name'

    def __init__(self):
        super().__init__()


class Упорядочивание_Обсессивно_компульсивный_синдром(Поиск_новых_оснований, Инструменты_Методы_Связи_С_Внешним, Память_Время, Система_Картина_мира):
    Юрий_Григорян = 'name'

    def __init__(self):
        super().__init__()


class Одержимость_архитектурой (Исследование_Роли_Понятия_Феномена, Система_Картина_мира, Потрясения_Травмы):
    Евгения_Репина = 'name'

    def __init__(self):
        super().__init__()


class Спонтанный_Ордер(Инструменты_Методы_Связи_С_Внешним, Исследование_Роли_Понятия_Феномена, Рефлексия_Переосмысление, Сообщество_культура):
    Евгения_Репина = 'name'

    def __init__(self):
        super().__init__()


class Цель_Целое_Полнота(Инструменты_Методы_Связи_С_Внешним, Исследование_Роли_Понятия_Феномена, Медиа_Дигитальное, Рефлексия_Переосмысление, Система_Картина_мира):
    Сергей_Ситар = 'name'

    def __init__(self):
        super().__init__()


class Подражание_Подобие_Селекция (Поиск_новых_оснований, Инструменты_Методы_Связи_С_Внешним, Сообщество_культура, Система_Картина_мира):
    Сергей_Ситар = 'name'

    def __init__(self):
        super().__init__()


class Условия_возможности_архитектуры (Инструменты_Методы_Связи_С_Внешним, Система_Картина_мира, Сообщество_культура, Медиа_Дигитальное):
    Сергей_Ситар = 'name'

    def __init__(self):
        super().__init__()


class Опасное_безопасное(Исследование_Роли_Понятия_Феномена,  Память_Время, Сообщество_культура, Потрясения_Травмы):
    Марат_Невлютов = 'name'

    def __init__(self):
        super().__init__()


class Новая_универсальность (Инструменты_Методы_Связи_С_Внешним, Медиа_Дигитальное, Рефлексия_Переосмысление, Сообщество_культура):
    Николай_Смирнов = 'name'

    def __init__(self):
        super().__init__()


class Архитектура_как_язык_описания (Инструменты_Методы_Связи_С_Внешним, Медиа_Дигитальное, Сообщество_культура, Память_Время, Среда_Пространство):
    Влад_Капустин = 'name'

    def __init__(self):
        super().__init__()


class Новые_Онтологии(Поиск_новых_оснований):
    Влад_Капустин = 'name'

    def __init__(self):
        super().__init__()


##################################################################################################################
##################################################################################################################
##################################################################################################################


class Время_как_координация(Отношения_Динамичного_контекста_и_Статичной_Архитектуры, Сообщество_культура, Среда_Пространство, Память_Время):
    Ольга_Конюкова = 'name'

    def __init__(self):
        super().__init__()


class Любовь_и_феномен_человека_в_обитании(Субъект_Объект_Пространство, Этическое_Рефлексия_Восприятие, Сообщество_культура):
    Екатерина_Сапунова = 'name'

    def __init__(self):
        super().__init__()


class Голос_архитектуры (Отношения_Динамичного_контекста_и_Статичной_Архитектуры, Коммуникация_с_архитектурой, Сообщество_культура, Память_Время, Медиа_Дигитальное):
    Екатерина_Сапунова = 'name'

    def __init__(self):
        super().__init__()


class Способы_контакта_взаимодействия_с_невменяемостью(Отношения_Динамичного_контекста_и_Статичной_Архитектуры, Потрясения_Травмы):
    Екатерина_Сапунова = 'name'

    def __init__(self):
        super().__init__()


class Образ_жизни_человека (Субъект_Объект_Пространство, Сообщество_культура):
    Анастасия_Яшкина = 'name'

    def __init__(self):
        super().__init__()


class Категории_UNCANNY(Критика_Понятия_Предложение_Инструмента, Рефлексия_Переосмысление):
    Анастасия_Яшкина = 'name'

    def __init__(self):
        super().__init__()


class Об_Элементе(Критика_Понятия_Предложение_Инструмента, Рефлексия_Переосмысление, Медиа_Дигитальное, Система_Картина_мира):
    Соня_Добычина = 'name'

    def __init__(self):
        super().__init__()


class Таблетка_Годара(Отношения_Динамичного_контекста_и_Статичной_Архитектуры, Критика_Понятия_Предложение_Инструмента, Медиа_Дигитальное, Рефлексия_Переосмысление, Память_Время):
    Никита_Моренов = 'name'

    def __init__(self):
        super().__init__()


class Эмансипаторное_в_архитектуре(Этическое_Рефлексия_Восприятие, Потрясения_Травмы):
    Антон_Карманов = 'name'

    def __init__(self):
        super().__init__()


class Неуверенное_Отказ_от_авторства(Отношения_Динамичного_контекста_и_Статичной_Архитектуры, Сообщество_культура, Память_Время, Рефлексия_Переосмысление):
    Юрий_Григорян = 'name'

    def __init__(self):
        super().__init__()


class Вина_и_равнодушие_архитектуры(Этическое_Рефлексия_Восприятие, Отношения_Динамичного_контекста_и_Статичной_Архитектуры, Потрясения_Травмы, Память_Время, Рефлексия_Переосмысление):
    Юрий_Григорян = 'name'

    def __init__(self):
        super().__init__()


class Промт_Архитектура_как_описание (Коммуникация_с_архитектурой, Медиа_Дигитальное, Рефлексия_Переосмысление):
    Юрий_Григорян = 'name'

    def __init__(self):
        super().__init__()


class Возвращение_живого_мира(Этическое_Рефлексия_Восприятие, Сообщество_культура, Память_Время, Рефлексия_Переосмысление):
    Евгения_Репина = 'name'

    def __init__(self):
        super().__init__()


class Враждебность_Режимность_Раскрепощение (Этическое_Рефлексия_Восприятие, Сообщество_культура, Потрясения_Травмы):
    Сергей_Ситар = 'name'

    def __init__(self):
        super().__init__()


class Сила_бессмыслицы(Критика_Понятия_Предложение_Инструмента, Медиа_Дигитальное, Сообщество_культура, Рефлексия_Переосмысление):
    Сергей_Ситар = 'name'

    def __init__(self):
        super().__init__()


class Ненасильственная_архитектура(Этическое_Рефлексия_Восприятие, Потрясения_Травмы):
    Марат_Невлютов = 'name'

    def __init__(self):
        super().__init__()


class Архитектура_антропоцена_архоантропоцен(Субъект_Объект_Пространство, Сообщество_культура):
    Николай_Смирнов = 'name'

    def __init__(self):
        super().__init__()


class Страх_Авторитеты_Ответственность_Крепость (Этическое_Рефлексия_Восприятие, Сообщество_культура, Потрясения_Травмы):
    Леша_Лашков = 'name'

    def __init__(self):
        super().__init__()


class Естественный_Интеллект(Критика_Понятия_Предложение_Инструмента, Сообщество_культура, Медиа_Дигитальное):
    Леша_Лашков = 'name'

    def __init__(self):
        super().__init__()


class Проектирование_с_помощью_И_Цзин(Коммуникация_с_архитектурой, Медиа_Дигитальное, Рефлексия_Переосмысление, Система_Картина_мира):
    Влад_Капустин = 'name'

    def __init__(self):
        super().__init__()



##################################################################################################################
##################################################################################################################
##################################################################################################################